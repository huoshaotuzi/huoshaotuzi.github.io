{"meta":{"title":"火兔の小窝","subtitle":"开发日记","description":"开发日记。","author":"火烧兔子","url":"https://blog.huotuyouxi.com","root":"/"},"pages":[{"title":"about","date":"2020-03-01T08:31:50.000Z","updated":"2020-03-01T08:38:11.807Z","comments":true,"path":"about/index.html","permalink":"https://blog.huotuyouxi.com/about/index.html","excerpt":"","text":"作者信息昵称：火烧兔子 QQ：874811226 游戏开发者、热爱写作、分享、沉迷研究技术的程序员。 游戏作品火兔游戏官方网站：https://huotuyouxi.com 魔王传说 宠物战纪 黑暗刻印 冒险物语 月之幻想 路人甲的故事 名为怪物的游戏"},{"title":"分类","date":"2020-03-01T12:59:10.000Z","updated":"2020-03-01T13:57:44.248Z","comments":true,"path":"categories/index.html","permalink":"https://blog.huotuyouxi.com/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2020-03-01T12:59:59.000Z","updated":"2020-03-01T13:57:39.492Z","comments":true,"path":"tags/index.html","permalink":"https://blog.huotuyouxi.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"游戏中的抽奖是否应该有保底机制？","slug":"game-draw-card-mechanism","date":"2020-03-07T14:12:52.000Z","updated":"2020-03-07T14:15:31.311Z","comments":true,"path":"game-draw-card-mechanism/","link":"","permalink":"https://blog.huotuyouxi.com/game-draw-card-mechanism/","excerpt":"","text":"前言游戏中的抽奖机制是几乎所有游戏都要面临的问题，在一定程度上来说，抽奖机制可以决定游戏的命运。 当一个打算弃坑的玩家，想在最后抽个爽，结果却出了许多氪金大佬都没有的神宠！在游戏广播下，世界频道异口同声的喊起“狗托”，豹子头“零充”玩家心情自然不言而喻，十有八九会享受万众羡慕的眼神继续愉快的玩耍。 反之，一个氪金大佬怒抽 100 连，砸了 N 个 648 结果还不出货，正气急败坏，却看楼上那位零氪玩家的广播 XXX 玩家抽到 XXX，试问氪金大佬此时作何感想？ 当然，上面的情景仅为 YY，实际上可能并没有那么夸张，举例只是为了说明在某些特定情况下可以决定玩家是否继续玩下去。 游戏中的抽奖机制游戏中的抽奖机制经过不断演变，发展为两种比较常见的形式：无保底机制 与 保底机制。 无保底机制如字面意思，无论抽几次，概率都是一样。 这种模型会造成某些玩家运气好，尤其是零元党在抽到好东西的时候很喜欢在 贴吧秀，对包括零氪、土豪玩家造成暴击伤害，“脸帝”是玩家公敌。 无保底机制的弊端会造成游戏过于依赖运气成分。 脸黑玩家可能永远抽不到，土豪玩家可能连砸 N 个 648 依然得不到。 站在游戏开发者的角度，希望绝大多数玩家可以体验到游戏绝大多数内容，而不是单纯的靠运气决定，这个时候就可以依靠俗话说的“努力就会有回报”。 保底机制玩家通过抽奖，达到一定次数就能得到最好的奖励，这就是保底奖励。 保底奖励又有两种形式。 积分兑换第一种是以累计 “积分” 的形式，玩家可以用积分在商店兑换到最好的奖励。 这种方式的好处是，玩家可以 明确的知道 抽几次一定可以拿到大奖，虽然可能会损失几分惊喜的感觉，但是会让玩家心里感到踏实。即使失败也不会有太大的负面影响，因为失败也会累计积分作为补偿。 幸运值第二种是通过抽奖累计 “幸运值”，每次抽奖都可以使下次抽到大奖的几率提高，幸运值达到满时必定抽到。比如王者荣耀的水晶/积分抽奖，玩家可以通过日常获得的钻石去抽奖，即使没抽到也可以积累幸运值，慢慢积累直到抽到水晶然后兑换韩信这个英雄。有些游戏的强化系统也采用这种形式，每次强化失败，下一次强化的成功几率就会提高。 这种方式的好处是可以让玩家 保持对于抽奖的期待，因为概率不断提高，玩家的内心就会觉得可能下一次就中了，而且有保底满幸运值必中的结果，玩家对于失败的感觉就很淡然了，现在的抽奖已经变为 “可以让我省多少钱”，越早抽到，玩家反而会觉得赚到了。 游戏的抽奖该不该保底？回到标题，让我们思考下面几个问题： 游戏的抽奖该不该保底？ 开发商会因为保底而亏损吗？ 保底抽奖机制到底对哪种类型的玩家更有好处？ 1、个人的看法是游戏抽奖以保底机制更好 我是一个游戏开发者，我希望玩家可以体验到游戏的更多内容（毕竟是我亲自设计的），故意吊玩家的胃口，让某些神宠只让个别人拥有，固然可以提高玩家对神宠的追求，但如果一个永远无法达成的目标，只会让玩家失望，累积越来越多的失望最终就会失去玩家。 2、不会因为保底抽奖而亏损首先保底机制可以减少玩家的流失，这是其一；其二，保底机制也让土豪玩家更有动力去充钱，以上面的积分模型为例，土豪玩家如果想要得到所有最好的奖励，“最坏”的结果已经可以通过计算明确知道了，当人知道最坏结果时，对失败的承担能力就会越强，而且土豪也可以通过计算推出自己 应该充多少钱 才能拿到所有的奖励，土豪并不差钱，但是土豪并不想被 概率 忽悠。 策划也可以通过 临界值 来诱使玩家进行充值，这个方法十分见效，我自己就上过很多次当。 下面是我被网易坑的血泪史（┭┮﹏┭┮）： 网易新出的游戏百闻牌，里面故意设计红玉和蓝玉兑换机制，让玩家误以为充值的就是红玉，其实充值的是蓝玉，需要再兑换成红玉才能抽奖。 （这种欺骗玩家或者诱导玩家错觉的行为极其不可取！） 抽奖处显示抽 10 次就可以得到妖刀姬，我就充了 30（计算得出只要充 30 就可以抽 10 次奖），结果发现充值的是蓝玉，兑换之后只有 5 次抽奖机会（真是神坑！） 好吧，现在已经抽了 5 次，再抽 5 次才能抽到，那我是抽还是不抽呢？这里还涉及到沉默成本，后文介绍。 当然是选择继续抽，而且这次还充了 68，原因是首充有额外赠送。 落入策划步步设计的深坑 ┭┮﹏┭┮ 然后又抽了 5 次才拿到妖刀姬。 这里，由于我之前已经累积了 5 次，只要再抽 5 次就可以拿到大奖，因此我会有驱动力去继续抽下去，如果是在临界值，这个动力就会更强，例如：299/300 的时候，只需要再一次就可以抽到！ 接下来谈一谈 沉默成本。 沉默成本是经济学里面的概念（我大学也是学过经济学的2333）。 比如你投一只股票，当天亏损了 5 万，你会卖掉还是等明天看看？ 很多人都会留着看看，因为这样白白亏损很不甘心。 但实际上，你亏损的 5 万已经成为了事实，已经无法改变，不应该影响下一步的决策。 就像上面我充了 30，结果发现只抽了 5 次，但此时我损失 30 块钱已经是板上钉钉子的事了，但是我的心里面就会想：“我已经充了 30，再充 30 就可以拿到想要的了，不能让之前充的白白浪费”。 这里就是沉默成本在作怪。 实际上，沉默成本也是决定游戏命运至关重要的要素，如果一个策划可以让玩家在游戏里投入更多的时间，那玩家就会越来越难以失去这个游戏，甚至以为是“情怀”什么的，比如魔兽玩家经常会说，“那不是游戏，而是我逝去的青春”，可以说是沉默成本非常形象的说明了。 3、保底机制更利于氪金玩家由于保底机制，只要无限氪金 必然可以得到一切，也就造成了有钱可以为所欲为的情况，难道开发商不希望土豪充更多的钱吗？所以，开发商是绝对不会亏的，这一点可以保证。 由于氪金玩家可以不断充钱得到所有的奖励，如果不是保底机制呢？氪金玩家投入将是无底洞，无论投入多少钱，也许永远都得不到想要的一只英雄或者宠物。 其次，对于零氪玩家来说也是极好的，只是提升的程度没有土豪玩家那么大而已。 保底机制对“脸帝”来说是最大的威胁，由于保底，这样他们根本 秀不起来，他们由于脸好得到的神宠已经是人手可得的普通宠物了，晒这样的宠物已经无法满足他们日渐膨胀的虚荣心。 作为贴吧 13 级的大水比，已经见惯了秀脸贴。 “萌新求问 XXX 有用吗？” 抽奖中的暗箱操作之前看了一期游戏抽奖的视频，介绍了游戏抽奖中的各种暗箱操作。 其中之一是最坑的，下面用一个故事来说明。 隔壁老王有一颗价值 1 万的钻石，他想了一个办法，可以让这颗钻石赚到更多钱。 他做了 300 个空盒子，接着把钻石放在其中一个盒子，其他 299 个盒子都放一颗与钻石等重的碎玻璃，然后他开始在大街上摆摊吆喝：300 个盒子里有一颗价值 1 万的钻石，其他都是玻璃，每个盒子卖 50 块，买盒子的人不能说出自己开到什么东西。 众人听到，纷纷想以 50 博 1 万，结果所有的盒子都卖出去了，老王共得 1.5 万，比直接出售钻石还多赚了 5000。 在这里有一个很坑的点，假设第一个买盒子的人开到钻石，那后面 299 个人必定无法开到钻石，也就是必定亏损的，但是由于 “不能说出自己开到什么” 导致后面来买盒子的人仍然抱有期待，因而继续购买盒子。 在一些游戏中，由于玩家并不能知道游戏的抽奖机制是什么，因此就会有策划想出这种“歪点子”，有些游戏里的大奖每天只会发放一份（或者固定份数），而后续的玩家永远抽不到。 除此之外，还有另一种暗箱操作——奖池机制。 这种方式的特点是全服玩家共享一个奖池，上面的例子也可以归为此类，只不过奖池机制有些不同。 奖池是彩票或者棋牌游戏中的概念，所有玩家一起打牌，每轮都要下赌资，赌资全部汇集到奖池中，直到某个玩家开牌，牌面最大的玩家得到所有奖池的钱。 游戏抽奖机制也存在这种情况，所有玩家都在一个奖池里抽奖，玩家的每次抽奖相当于 “投入赌资”，只有抽奖次数达到一定水平时才会出现大奖，大奖被一个玩家得到以后，奖池清空，开启下一轮的奖池，以此类推。 所以在某些游戏中，垫子之类的说法存在一定道理，一个服务器里面抽奖的玩家越多，抽到大奖的几率就越高，在鬼区没人抽奖的情况下，甚至有可能抽奖几率为负数。 后文在这里写一下个人的想法。 假如作为开发商，自然希望玩家能多充钱，因为开发商开发游戏的目的很明确就是为了赚钱。 作为游戏制作者，我希望玩家可以体验到更多的游戏内容，而不是靠运气和财富差距造成严重游戏体验偏差。至于钱，目前并没有太大的想法，现在只是单纯的因为喜欢游戏而做游戏，也许以后会为了钱设计坑玩家的套路，但是赚到钱（维持生计）的同时，一定会并行开发一款自己真正想做的游戏（单机游戏）。 作为玩家，希望策划别坑！","categories":[{"name":"游戏日记","slug":"游戏日记","permalink":"https://blog.huotuyouxi.com/categories/%E6%B8%B8%E6%88%8F%E6%97%A5%E8%AE%B0/"}],"tags":[{"name":"游戏","slug":"游戏","permalink":"https://blog.huotuyouxi.com/tags/%E6%B8%B8%E6%88%8F/"}]},{"title":"猴子都能学会的hexo博客安装教程","slug":"easy-to-start-hexo","date":"2020-03-01T02:49:10.000Z","updated":"2020-03-01T16:52:00.714Z","comments":true,"path":"easy-to-start-hexo/","link":"","permalink":"https://blog.huotuyouxi.com/easy-to-start-hexo/","excerpt":"","text":"hexo 简介hexo 是一款开源博客项目。 即使是小白借助 hexo 也能轻松搭建属于自己的博客。 根据下面的教程，你能学会搭建个人博客，并且其他人可以通过外网访问到你的博客！ hexo 官网：https://hexo.io/ 官方中文文档：https://hexo.io/zh-cn/docs/index.html 【FAQ】 需要买服务器和域名吗？ 通过 Github Pages 可以白嫖域名和服务器，所以不用买。 当然，如果你的钱包预算足够，买一款心仪的域名和自己的服务器那就更完美了！ 话不多说，接下来直接进入教学篇。 准备工作本教程主要基于 Linux 系统，如果是 Window 系统也不用急，只是增加一个配置环境变量的步骤，机智的你一定懂得怎么做！ 代码编辑器：VS Code 基础环境hexo 依赖于 node，首先需要安装 node 环境。 1、安装 NodejsWindows 系统 nodejs 官网下载：https://nodejs.org/zh-cn/download/ 如果确实是小白，建议下载 Windows 安装包 (.msi)，msi 安装包会自动配置环境变量，真正实现小白式操作。 Linux 系统 Linux 版本众多，在这里只介绍 Centos 的安装方法。 第一步：安装 node 相关依赖 1yum install -y gcc gcc-c++ openssl-devel epel-release 第二步：安装 nodejs 1yum install -y nodejs 安装完成后，在控制台输入命令： 1node -v 如果可以看得到版本信息说明安装成功。 安装完 node 之后，即可使用 npm 命令，由于 npm 的源是国外网站，速度会很慢，为了节省时间我们可以更换淘宝提供的镜像。 1npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org 安装完成后就可以使用 cnpm 命令了，在后续的操作用 cnpm 来代替 npm。 2、安装 GitGit 是代码托管工具，整个过程 Git 的戏份很少，不懂的小白也不用担心，安装好就对了！ Windows：https://git-scm.com/download/win. Mac：使用 Homebrew, MacPorts 或者下载 安装程序。 Linux (Ubuntu, Debian)：sudo apt-get install -y git-core Linux (Fedora, Red Hat, CentOS)：sudo yum install -y git-core Mac 用户请先到 App Store 安装 Xcode，Xcode 完成后，启动并进入 Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install 安装命令行工具。 3、安装 hexo使用 cnpm 命令一键安装 hexo： 1cnpm install -g hexo-cli 安装完成后，在控制台输入命令： 1hexo 如果看得到如下信息说明安装成功： 1234567891011121314151617Usage: hexo &lt;command&gt;Commands: help Get help on a command. init Create a new Hexo folder. version Display version information.Global Options: --config Specify config file instead of using _config.yml --cwd Specify the CWD --debug Display all verbose messages in the terminal --draft Display draft posts --safe Disable all plugins and scripts --silent Hide output on consoleFor more help, you can use &#39;hexo help [command]&#39; for the detailed informationor you can check the docs: http:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F; 搭建博客！现在开始搭建博客项目，运行命令： 1hexo init blog 这个 blog 是文件夹的名字，你可以随意取，在这里我把它取名 blog。 执行完这个命令会自动在当前目录下创建一个 blog 文件夹，使用命令 cd blog 进入这个文件夹，接着再执行 cnpm install。 安装完成后，文件夹的目录如下所示： 12345678.├── _config.yml├── package.json├── scaffolds├── source| ├── _drafts| └── _posts└── themes 需要注意两个主要的配置文件： 1、_config.yml网站的配置信息，比如网站的名字什么的，都在这里进行配置。 2、package.json网站依赖的包（小白不用管这个东西），默认已经帮你配置好常用的包了。 以上，你的博客已经搭建完啦！ 访问博客！什么鬼！？这就搭建完了？？ yes，我们打开控制台，在博客目录下执行命令启动博客： 1hexo s 如图所示： 然后打开浏览器，输入 http://localhost:4000 或 127.0.0.1:4000。 你就可以看到搭建好的博客啦！ 如下图所示： 写下第一篇博文！好吧，其实你的第一篇博客已经被系统写好了，也就是你在上图看到的标题为 Hello World 的博文。 接下来我们要手动创建第一篇博客！ 使用命令 hexo n &lt;博文标题&gt; 来创建一篇新的博文。 控制台下输入： 1hexo n &quot;我的第一篇博客&quot; 执行完命令后，可以看到生成了一个 .md 格式的文件 /blog/source/_posts/我的第一篇博客.md，如下图所示： 这个文件就是我们的博文内容，进入 /blog/source/_posts/ 然后打开 我的第一篇博客.md， 可以看到默认内容类似： 123456---title: 我的第一篇博客date: 2020-03-01 10:49:10tags:--- 开头的部分不要动，在结尾部分写自己想写的文章即可，比如： 12345678910---title: 我的第一篇博客date: 2020-03-01 10:49:10tags:---# 兔子的日记今天的天气真好！ 如果你用的是 Markdown 还能看到预览效果！ Markdown 编辑器推荐：有道云笔记 （你可以在其他地方编辑好文章，然后复制过来） 我用的是 PHPstorm，预览效果如下： 文章内容已经写好了，接下来要生成静态页面，按 Ctrl+C 把刚才启动的博客关掉： 然后依次运行如下命令： 1hexo clean 清空数据库，如图所示： 接着输入 hexo g 重新编译生成静态页面： 1hexo g 运行结果如下： 最后，再启动 hexo： 1hexo s 浏览器输入：127.0.0.1:4000 就可以看到自己刚才写的那篇文章了。 如图所示： 至此，hexo 的基本操作已经 OK 了。 再来总结一下怎么发一篇博文。 1、执行 hexo n &lt;标题&gt; 创建博文文件 2、在 Markdown 编辑器完成博文书写，把内容复制到上面生成的博文文件里 3、执行 hexo clean 清空数据 4、执行 hexo g 重新编译生成静态文件 此外，本地调试用 hexo s 开启本地服务，在浏览器输入 127.0.0.1:4000 访问博客项目。 要记住这些步骤和命令对小白来说十分吃力，这是很正常的事情。 如果忘记了怎么操作，回头多看几遍本博文，熟能生巧！ 自定义主题！默认博客页面太丑，想换一个怎么办？ 网上找到其他人分享的主题：https://github.com/zhvala/hexo-material-x-black 然后把它下载下来，点击右侧 Clone or download： 下载下来并且解压，把解压后的文件复制到博客项目的 themes 目录下。 或者直接 clone 到 themes 目录下并且命名为 material-x： 1git clone https:&#x2F;&#x2F;github.com&#x2F;xaoxuu&#x2F;hexo-theme-material-x themes&#x2F;material-x 主题文件都很大，等下载完成就可以了。 主题下载下来以后，目录结构如下： themes 下面的文件夹都是主题。 接着编辑 .config.yml，拉到底部，修改 theme 字段： 1234# Extensions## Plugins: https:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F;## Themes: https:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;theme: material-x theme 默认是 landscape，改成刚刚下载的主题 material-x（即文件夹的名字）。 然后安装主题所需的依赖： 1npm i -S hexo-generator-search hexo-generator-feed hexo-renderer-less hexo-autoprefixer hexo-generator-json-content hexo-recommended-posts 接着执行下面几个命令（如果之前启动了博客项目，记得按 Ctrl+C 先关掉）： 123hexo cleanhexo ghexo s 访问 http://localhost:4000，可以发现主题已经被更换成新的了。 在 Github 上还有更多主题可以选择：点击此处获取更多主题 发布博客！上面的步骤只能在自己的电脑打开博客项目，现在我们要把博客发到外网去，让别人来参观你的博客！ — 小剧场 — 你是想要节操，还是想白嫖域名和服务器？ 我是想要节操还把域名和服务器嫖了！ 嫖不成。 啪一声，你把 300 块大洋拍在桌子上。 这个能不能换来节操？ 能，但是钱包空了。 啪一声，你把节操拍在桌子上，300 块大洋收回兜里。 嫖谁的？ GitHub 的！ 就那个全球最大同性交流社区？ 正是。 敢问君为何方神圣？ GitHub 基佬是也。 — 小剧场（完） — 没错，我们要白嫖 GitHub 提供的免费域名和空间——GitHub Pages！ GitHub Pages 提供了免费的服务可以让我们部署博客项目。 Github：https://github.com/ 注册一个账户并登陆。 接着点击左侧 Repositories 旁边的按钮 New 创建一个新的仓库，如图： 仓库的配置有两点需要注意，如果你没按照下面的要求，你的博客就访问不了： 1、仓库名称必须为：你的 GitHub 用户名.github.io，比如我的 Github 用户名是 huoshaotuzi，那么仓库的名字就是：huoshaotuzi.github.io 2、仓库必须为 Public 公开权限，如果选择 Private，就不能白嫖了，这也是上面的小剧场所说的出卖节操的原因，一旦公开权限，你的仓库 任何人都能访问，你的仓库设置成 Public，相当于你光着屁股暴露在 Github 几百万基佬面前，知道啥意思了吧？ 创建好仓库后，可以看到如下的仓库信息： （xxoo 是随便取的名字，不要问 xxoo 是什么意思，问了也不会告诉你。） 在这里把 SSH 后面的仓库地址复制下来，后面会用到。 接着返回到你博客的目录下，执行命令安装 git 插件： 1cnpm install --save hexo-deployer-git 安装完成后，编辑根目录下的 _config.yml，拉到最底部，deploy 后面添加如下内容： 123456# Deployment## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.htmldeploy: type: git repo: https:&#x2F;&#x2F;github.com&#x2F;huoshaotuzi&#x2F;xxoo.git（填你自己的） branch: master 这里的 repo 填入上面说的仓库地址： 保存配置文件后，输入命令： 1hexo d 执行命令后开始自动编译并且上传到 GitHub 仓库，然后会提示要输入 Github 的账号跟密码。 为了避免每次上传都要重复输入账号密码，你可以输入下面的命令记住密码： 1git config --global credential.helper store 上传成功后，返回仓库就能看到上传好的代码。 然后就可以通过仓库名称访问到你的博客了！ 我的仓库名称是：huoshaotuzi.github.io 在浏览器输入：huoshaotuzi.github.io 刚刚部署上去的时候，需要等几分钟才能看到博客，不然会出现 404 或者其他问题。 白嫖党只能使用 GitHub 提供的域名，接下来给大家介绍如何指定域名进行访问。 比如我的网站是：blog.huotuyouxi.com 这是怎么实现的呢? 指定域名！首先，你得有一个域名。 万网阿里云、百度云、腾讯云、京东云、华为云、国外的 GoDaddy……诸如此类域名服务提供商，任选一家即可。 建议购买 .com 后缀的域名，域名的名称就按照你自己喜欢的挑选了。 比如张三：zhangsan.com 皮卡丘博客：pikachublog.com 简单好记的域名，这个没什么要求的，选你喜欢的就好。 域名买好之后，在仓库主页的菜单栏，选择 Settings： 拉到下面，直到看到 GitHub Pages，然后点击 Choose a theme 选择一个主题： 主题按照你喜欢的随便选一个就好： 比如选第一个，然后点击右下角 Select theme。 接着返回 Github Pages 配置域名： 在 Custom domain 栏处填写你购买的域名，然后点击 Save。 如果需要启用 https 域名，把 Enforce HTTPS 勾选即可，刚部署时需要等待几分钟 Enforce HTTPS 才会显示可选，并且勾选完成后也需要等待几分钟，Github 会为你免费提供 SSL 证书。 然后打开你购买域名的网站，例如阿里云，登录后打开右上角控制台-点击左上角展开菜单-选择域名： 在域名右侧选择解析： 点击“添加记录”，记录类型 CNAME，主机记录 @，记录值填你自己仓库的名字： 如果你希望可以用 www 访问，那就再添加一条记录，主机记录填 www，其他跟上面的一样： 完成这一步你就可以通过购买的域名访问到博客了！ 指定服务器！不想出卖节操，就买台服务器自己安装环境，这样可以保证代码不被其他基佬看到。 1、域名和服务器的选择选服务器可是很有讲究的，看你网站的受众，如果是面向海外用户，就选国外的服务器；如果面向国内用户，那就买国内的服务器。服务器放在哪很大程度上会影响你网站的打开速度。 再者，如果你选国内服务器，还需要注意域名备案的问题。 想要搭建博客，最好提前买个域名进行备案。 没有备案的域名只能选择国外主机。 只建议购买：com、cn、net 这三个老牌域名。 非主流域名即使能备案，搜索引擎也很难收录，所以不推荐。 有条件或者嫌备案麻烦的，可以购买香港或者台湾地区的服务器，靠近大陆，延迟相对低一点，域名即买即用。 2、服务器环境服务器推荐 Centos 系统，如果是小白也可以选 Windows Server。 要让网站解析到服务器，首先需要安装 Web 服务器，老牌的 Web 服务器软件有 Apache，Windows 的 IIS。 这两个本人几乎没用过，就不在这里介绍了。 推荐使用 Nginx。 以 Centos 为例，安装十分简单： 1yum install -y nginx 安装完成后，执行命令： 1vim &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;blog.conf 按下 i 键插入如下内容： 12345server &#123; server_name blog.huotuyouxi.com; root &#x2F;var&#x2F;www&#x2F;blog; index index.html;&#125; 然后按 Esc，输入 wq! 保存。 接着重启 Nginx： 1nginx -s reload 在这里，server_name 是你的域名。 root 是你的博客项目路径，可以下载 FileZilla 把博客上传到服务器，或者直接使用 git clone 下来。 12cd &#x2F;var&#x2F;wwwgit clone &lt;你的博客仓库地址&gt; 然后你在哪买的域名，就登录到控制台把域名解析到服务器的公网 IP。 解析的方法在上面已经有介绍了，这里不再重复。 3、更新博客内容 前面的文章介绍了如何编写和更新博客： 123hexo cleanhexo ghexo d 更新博客内容并且推送到 Github 上面，你就可以回到服务器上，然后执行 git pull 把最新的博客内容拉取下来，实现博客的更新。 其中，hexo g 和 hexo d 两个命令可以简写成： 1hexo d -g 有兴趣的可以去了解一下 Git 自动构建，延伸的内容太多了，本文写不下 4、博客代码备份使用 hexo d 上传到 Github 的只是编译后的静态文件，博客的代码并没有上传到仓库里。 这样一旦你的博客代码丢失，你就无法继续更新了。 为了避免这种情况，我们要把博客代码也上传到仓库里，最好是上传到同一个仓库。 回到本地的博客项目，执行如下命令： 12git checkout -b developgit push origin develop 这两个步骤，第一个是切换到新的分支 develop（名字可以随便取），然后把新的分支推送到远程仓库。 如此一来，你的博客代码也被保存至仓库里。 前往 Github 查看，点击 Branch 即可看到新的分支： 还记得最早我们在 _config.yml 设置的 Github 仓库地址吗？ 这里我们把静态文件的分支设置成 master，因此我们可以专注于在 develop 分支上写博文，然后用 hexo d -g 进行推送，不需要进行分支切换，十分方便！ 把博客代码上传到远程仓库，即使你在另一台电脑上面也可以把项目克隆下来，然后执行如下命令： 1git checkout develop 切换到 develop 分支上去写博文。 结语借助 hexo 可以快速搭建属于自己的博客，平时学习到新东西的时候就可以记录下来，养成良好的习惯有助于学习成果的积累。","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://blog.huotuyouxi.com/categories/Hexo/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://blog.huotuyouxi.com/tags/Hexo/"},{"name":"技术","slug":"技术","permalink":"https://blog.huotuyouxi.com/tags/%E6%8A%80%E6%9C%AF/"}]}]}